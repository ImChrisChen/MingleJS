/** * Created by WebStorm. * User: MacBook * Date: 2020/9/21 * Time: 7:17 下午 */export default class Observe {    events: Object = {};    private readonly instance;    constructor() {        if (this.instance) {            return this.instance        }        this.instance = new Observe();    }    subscribe(type, listener) {        if (!this.events[type]) {            this.events[type] = []            this.events[type].push({ type, listener });            return        }        this.events[type].push({ type, listener })    }    publish(type) {        if (!this.events[type]) {            console.log(`${ type }还没有订阅`);            return        }        this.events[type].forEach(event => {            event.listener && event.listener();        })    }}