/** * Created by WebStorm. * User: chrischen * Date: 2020/9/20 * Time: 2:36 上午 */export function isStr(v) {    return typeof v === 'string';}export function isEmptyStr(v) {    return v === '';}export function isBool(v) {    return typeof v === 'boolean';}export function isObject(v) {    return typeof v === 'object' && v.constructor === Object;}export function isEmptyObject(v) {    return JSON.stringify(v) === '{}';}export function isArray(v) {    return typeof v === 'object' && v.constructor === Array;}export function isEmptyArray(v) {    return JSON.stringify(v) === '[]';}export function isNoEmptyArray(v) {    return isArray(v) && !isEmptyArray(v);}export function isUndefined(v) {    return typeof v === 'undefined';}export function isFunc(v) {    return typeof v === 'function';}export function isDOM(v) {    return (typeof HTMLElement === 'object') ?        v instanceof HTMLElement :        v && typeof v === 'object' && v.nodeType === 1 && typeof v.nodeName === 'string';}// 判断是否是Class https://zhuanlan.zhihu.com/p/53385348export function isClass(obj, strict?) {    if (typeof obj != 'function') return false;    let str = obj.toString();    // async function or arrow function    if (obj.prototype === undefined) return false;    // generator function or malformed definition    if (obj.prototype.constructor !== obj) return false;    // ES6 class    if (str.slice(0, 5) == 'class') return true;    // has own prototype properties    if (Object.getOwnPropertyNames(obj.prototype).length >= 2) return true;    // anonymous function    if (/^function\s+\(|^function\s+anonymous\(/.test(str)) return false;    // ES5 class without `this` in the body and the name's first character    // upper-cased.    if (strict && /^function\s+[A-Z]/.test(str)) return true;    // has `this` in the body    if (/\b\(this\b|\bthis[\.\[]\b/.test(str)) {        // not strict or ES5 class generated by babel        if (!strict || /classCallCheck\(this/.test(str)) return true;        return /^function\sdefault_\d+\s*\(/.test(str);    }    return false;}