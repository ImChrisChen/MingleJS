/** * Created by WebStorm. * User: MacBook * Date: 2020/9/23 * Time: 12:54 下午 */import React from "react";import { deepEach, isObject } from "@utils/util";import LayoutMenu from "@component/layout/menu/menu";import componentMap from '../../config/component.config'import { Route } from "react-router";import FormSelect from '@component/form/select/select'console.log(FormSelect);export class Document extends React.Component<any, any> {    state: any = {        menuList: [],        routes  : [],    }    constructor(props) {        super(props);    }    componentWillMount() {        console.log('componentWillMount');        this.componentFormatArray(componentMap).then(list => {            let routes = deepEach(list, item => {                if (item.component) return item;            })            this.setState({ menuList: list, routes })        });    }    async componentFormatArray(componentMap) {        let newArr: Array<object> = [];        for (const key in componentMap) {            if (!componentMap.hasOwnProperty(key)) continue            let val = componentMap[key];            let children: Array<object> = [];            for (const k in val) {                let v = val[k];                let { component, docs, path } = v;                children.push({                    name     : k,                    component: await component,                    docs     : await docs,                    path,                    children : [],                });            }            newArr.push({ name: key, children: children });       // select / datepicker        }        return newArr;    }    render() {        console.log(this.state.routes);        let Routes = []        if (this.state.routes.length > 0) {            Routes = this.state.routes.map(route => {                console.log(route.component['default']);                return <Route key={ Math.random() * 1000 } path={ route.path }                              component={ route.component['default'] }/>            })        }        return <div>            <LayoutMenu menuList={ this.state.menuList }/>            <div className="">                <h1>Content</h1>                { ...Routes }                {/*<Route path="/form-datepicker" component={ FormSelectTree }/>*/ }                {/*<Route path="/form-button" component={ FormSelectTree }/>*/ }                {/*<Route path="/form-select" component={ FormSelectTree }/>*/ }            </div>        </div>    }}function deepEachObject(root, fn, temp: Array<any> = []) {    for (const key in root) {        if (!root.hasOwnProperty(key)) continue        let val = root[key]        if (fn) {            let callbackResult = fn(key, val, root, temp);            if (callbackResult) {                temp.push({                    [key]: val                });            }        }        if (isObject(val)) {            deepEachObject(val, fn, temp);        }    }    return temp;}