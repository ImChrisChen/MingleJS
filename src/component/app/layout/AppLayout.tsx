/** * Created by WebStorm. * User: MacBook * Date: 2020/11/18 * Time: 7:32 下午 */import React, { Component } from 'react';import { IComponentProps } from '@interface/common/component';import { elementWrap } from '@utils/parser-dom';import $ from 'jquery';export default class AppLayout extends Component<IComponentProps, any> {    state = {        containers: [ 'aside', 'header', 'main' ],    };    constructor(props) {        super(props);        this.renderSlot();    }    renderSlot() {        setTimeout(() => {            let rootElement = elementWrap(this.props.elChildren);            this.state.containers.forEach(slot => {                let container = rootElement.querySelector(`[data-slot=${ slot }]`) as HTMLElement;                if (container) {                    let content = [ ...container.children ];                    $(`#app-layout ${ slot }`).append(...content);                }            });        });    }    render() {        return <div id="app-layout" className="ant-layout" style={ { display: 'flex', flexDirection: 'row' } }>            <aside>            </aside>            <section className="ant-layout site-layout" style={ { width: '100%' } }>                <header className="ant-layout-header site-layout-background"                        style={ { background: '#fff', padding: 0 } }>                </header>                <main className="ant-layout-content site-layout-background" style={ { minHeight: 280 } }>                </main>            </section>        </div>;    }}