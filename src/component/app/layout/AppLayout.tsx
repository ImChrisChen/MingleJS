/** * Created by WebStorm. * User: MacBook * Date: 2020/11/18 * Time: 7:32 下午 */import React, { Component } from 'react';import { IComponentProps } from '@interface/common/component';import { elementWrap } from '@utils/parser-dom';import $ from 'jquery';import { Content, Footer } from 'antd/lib/layout/layout';import style from './AppLayout.scss';import { Avatar, Button, Dropdown, Menu } from 'antd';import { UserOutlined, CaretDownOutlined } from '@ant-design/icons';export default class AppLayout extends Component<IComponentProps, any> {    state = {        containers: [ 'aside', 'header', 'main', 'footer' ],    };    constructor(props) {        super(props);        this.renderSlot();    }    renderSlot() {        setTimeout(() => {            let rootElement = elementWrap(this.props.elChildren);            this.state.containers.forEach(slot => {                let container = rootElement.querySelector(`[data-slot=${ slot }]`) as HTMLElement;                if (container) {                    $(`#app-layout [role=${ slot }]`).append(container);                }            });            $('body').on('click', '.layout-menu-toggle-btn', function (e) {                let layoutMenu = $(this).closest('aside[role=aside]');                let layoutContent = layoutMenu.next('div');                console.log(Number(layoutMenu?.width()) >= 200, layoutContent);                if (Number(layoutMenu?.width()) >= 200) {                    layoutContent.css('margin-left', '80px');                } else {                    layoutContent.css('margin-left', '200px');                }            });        });    }    render() {        const menu = (            <Menu>                <Menu.Item>                    个人信息                </Menu.Item>                <Menu.Item>                    退出                </Menu.Item>            </Menu>        );        return this.props.dataset.layout === 'h' ?            <div id="app-layout"                 className={ 'ant-layout' }                 style={ { display: 'flex', flexDirection: 'row' } }>                <aside style={ { background: '#fff' } }>                </aside>                <section className={ 'ant-layout site-layout' } style={ { width: '100%', background: '#fff' } }>                    <header className={ 'ant-layout-header site-layout-background' }                            style={ { background: '#fff', padding: 0 } }>                    </header>                    <Content role="main" className={ 'ant-layout-content site-layout-background' }                             style={ {                                 minHeight : 280,                                 padding   : 10,                                 boxSizing : 'border-box',                                 background: '#fff',                             } }                    >                    </Content>                </section>                <Footer role="footer" style={ { width: '100%' } }>                </Footer>            </div>            :            <div id="app-layout"                 className={ 'ant-layout' }                 style={ {                     display      : 'flex',                     flexDirection: 'row',                     flexWrap     : 'wrap',                 } }>                <header role="header"                        className={ `ant-layout-header site-layout-background ${ style.appLayoutHeaderV }` }>                    <div className={ style.logo }>Logo</div>                    <nav>                        <Dropdown overlay={ menu } placement="bottomCenter" arrow>                            <span style={ { cursor: 'pointer' } }>                                <Avatar size="small" icon={ <UserOutlined/> }/> bottomCenter <CaretDownOutlined/>                            </span>                        </Dropdown>                    </nav>                </header>                <section className={ `ant-layout site-layout ${ style.appLayoutSelectionV }` }>                    <aside role="aside" className={ style.appLayoutAsideV }>                    </aside>                    <div className={ `ant-layout-content site-layout-background ${ style.appLayoutContentV }` }>                        <Content role="main"                        >                        </Content>                        <Footer className={ style.appLayoutFooterV } role="footer">                        </Footer>                    </div>                </section>            </div>;    }}