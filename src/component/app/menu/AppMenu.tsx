/** * Created by WebStorm. * User: MacBook * Date: 2020/11/19 * Time: 3:05 下午 */import React, { Component } from 'react';import { IComponentProps } from '@interface/common/component';import style from './AppMenu.scss';import LayoutMenu from '@src/private-component/views/layout-menu/LayoutMenu';import { Inject } from 'typescript-ioc';import { HttpClientService } from '@services/HttpClient.service';import { FormatDataService } from '@services/FormatData.service';export default class AppMenu extends Component<IComponentProps, any> {    @Inject private readonly httpClientService: HttpClientService;    @Inject private readonly formatDataService: FormatDataService;    private colorUrl = `https://auc.local.aidalan.com/app/icon`;    private menuUrl = `https://auc.local.aidalan.com/user.menu/apps`;    state = {        systems : [],        current : 3,        menulist: [],    };    constructor(props) {        super(props);        this.getSystems().then(data => {            let findIndex = data.findIndex(item => item.host === location.host);            let current = this.state.current;            if (findIndex !== -1) {                current = findIndex;            }            this.setState({                systems: data,            });            this.handleClickSystem(current, data[current]);        });    }    async getSystems() {        // let { url } = this.props.dataset;        let res = await this.httpClientService.jsonp(this.menuUrl);        return res.status ? res.data : [];    }    renderSystems() {        let bgColor = 'FFF';        let borderColor = 'CCC';        let textColor = '999';        return this.state.systems.map((system: any, i) => {            return <li key={ system.appId }                       className={ style.system + ' ' + (i === this.state.current ? style.systemAction : '') }                       onClick={ e => this.handleClickSystem(i, system) }>                <img src={                    `${ this.colorUrl }?color=${ bgColor },${ borderColor },${ textColor }&str=2&appId=${ system.appId }`                } alt=""/>            </li>;        });    }    format(list) {        for (const item of list) {            let isroot = (item) => Number(item.r_father) === 0;            if (isroot(item)) {                item.children = [];            }        }    }    async handleClickSystem(i, system) {        let url = `https://auc.local.aidalan.com/user.menu/lists`;        let res = await this.httpClientService.jsonp(`${ url }?appId=${ system.appId }`);        let data = res.status ? res.data : [];        // list 转为 tree        let menulist = this.formatDataService.list2Tree(data, {            id  : 'appMenuId',            pid : 'r_father',            name: 'name',        });        // 数据key值转化        menulist = this.formatDataService.treeKeyReplace(menulist, {            id  : 'appMenuId',            pid : 'r_father',            name: 'name',        }, {            id  : 'value',            name: 'label',            pid : 'pid',        });        this.setState({            current: i,            menulist,        });    }    render() {        return <>            <div style={ { display: 'flex' } }>                <ul style={ { width: 40 } }>                    { this.renderSystems() }                </ul>                <LayoutMenu                    key={ this.state.current }                    width={ this.props.dataset.width }                    data={ this.state.menulist }                    open={ this.props.dataset.open }                    layout={ this.props.dataset.layout }                    pathfield={ this.props.dataset.pathfield || 'url' }/>            </div>        </>;    }}