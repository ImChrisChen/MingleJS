/** * Created by WebStorm. * User: MacBook * Date: 2020/11/19 * Time: 3:05 下午 */import React, { Component } from 'react';import { IComponentProps } from '@interface/common/component';import { jsonp } from '@utils/request/request';import style from './AppMenu.scss';import App from '@src/App';export default class AppMenu extends Component<IComponentProps, any> {    state = {        systems: [],        current: 0,        url    : '',    };    private fs;    constructor(props) {        super(props);        this.getSystems().then(data => {            console.log(data);            this.setState({ systems: data });        });    }    async getSystems() {        let { url } = this.props.dataset;        let res = await jsonp(url);        return res.status ? res.data : [];    }    renderSystems() {        let bgColor = 'FFF';        let borderColor = 'CCC';        let textColor = '999';        $(this.fs).find('[data-fn]').html('');        new App(this.fs);        return this.state.systems.map((system: any, i) => {            return <li key={ system.appId } className={ style.system }                       style={ { background: i === this.state.current ? '#000' : 'transparent' } }                       onClick={ this.handleClickSystem.bind(this, i) }>                <img src={                    `https://auc.aidalan.com/app/icon?color=${ bgColor },${ borderColor },${ textColor }&str=2&appId=${ system.appId }`                } alt=""/>            </li>;        });    }    async handleClickSystem(i, e) {        let url = `https://auc.aidalan.com/user.menu/lists`;        this.setState({ current: i, url });        // let res = await jsonp(`${ url }?appId=${ i }`);        // let data = res.status ? res.data : [];        // console.log(data);        // formatList2Tree(data, {        //     id      : '',        //     pid     : '',        //     name    : '',        //     children: '',        // });    }    render() {        return <>            <div style={ { display: 'flex' } }>                <ul style={ { width: 40 } }>                    { this.renderSystems() }                </ul>                <div ref={ fs => this.fs = fs }>                    <div data-fn="layout-menu"                         data-url=""                         data-open="true"                         data-id="appMenuId"                         data-pid="r_father"                         data-name="name"                         data-layout="inline"                         data-children="children"                         data-width="200"                    />                </div>            </div>        </>;    }}