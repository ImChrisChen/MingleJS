/** * Created by WebStorm. * User: MacBook * Date: 2020/10/27 * Time: 6:31 下午 */import { IComponentProps } from '@interface/common/component';import React from 'react';import { jsonp } from '@utils/request/request';import { Axis, Chart, Coordinate, Interval, Line, Point } from 'bizcharts';import { Spin } from 'antd';import FormAjax from '@component/form/ajax/form';import { formatObject2Url } from '@utils/format-data';// import areaUser from '@root/mock/chart/areaUser.json';// 数据源const data = [    {        month: 'Jan',        city : 'Tokyo',        value: 7,    },    {        month: 'Jan',        city : 'London',        value: 3.9,    },    {        month: 'Feb',        city : 'Tokyo',        value: 6.9,    },    {        month: 'Feb',        city : 'London',        value: 4.2,    },    {        month: 'Mar',        city : 'Tokyo',        value: 9.5,    },    {        month: 'Mar',        city : 'London',        value: 5.7,    },    {        month: 'Apr',        city : 'Tokyo',        value: 14.5,    },    {        month: 'Apr',        city : 'London',        value: 8.5,    },    {        month: 'May',        city : 'Tokyo',        value: 18.4,    },    {        month: 'May',        city : 'London',        value: 11.9,    },    {        month: 'Jun',        city : 'Tokyo',        value: 21.5,    },    {        month: 'Jun',        city : 'London',        value: 15.2,    },    {        month: 'Jul',        city : 'Tokyo',        value: 25.2,    },    {        month: 'Jul',        city : 'London',        value: 17,    },    {        month: 'Aug',        city : 'Tokyo',        value: 26.5,    },    {        month: 'Aug',        city : 'London',        value: 16.6,    },    {        month: 'Sep',        city : 'Tokyo',        value: 23.3,    },    {        month: 'Sep',        city : 'London',        value: 14.2,    },    {        month: 'Oct',        city : 'Tokyo',        value: 18.3,    },    {        month: 'Oct',        city : 'London',        value: 10.3,    },    {        month: 'Nov',        city : 'Tokyo',        value: 13.9,    },    {        month: 'Nov',        city : 'London',        value: 6.6,    },    {        month: 'Dec',        city : 'Tokyo',        value: 9.6,    },    {        month: 'Dec',        city : 'London',        value: 4.8,    },];const pieData = [    { item: '事例一', percent: 0.4 },    { item: '事例二', percent: 0.21 },    { item: '事例三', percent: 0.17 },    { item: '事例四', percent: 0.13 },    { item: '事例五', percent: 0.09 },];const cols = {    percent: {        formatter: val => {            val = val * 100 + '%';            return val;        },    },};export default class DataImage extends React.Component<IComponentProps, any> {    state = {        loading: true,        data   : [],    };    constructor(props) {        super(props);        if (this.props.dataset && this.props.dataset.from) {            let formElement = FormAjax.findFormElement(this.props.dataset.from);            FormAjax.onFormSubmit(formElement, this.handleFormSubmit.bind(this));        }        this.getData().then(data => {            console.log(data);            this.setState({ data, loading: false });        });    }    async handleFormSubmit(formData) {        this.setState({            loading: true,        });        let url = formatObject2Url(formData, this.props.dataset.url);        let res = await jsonp(url);        if (res.status) {            this.setState({ data: res.data, loading: false });        }    }    async getData() {        let res = await jsonp(this.props.dataset.url);        // return data;        return res.status ? res.data : [];    }    pie() {        return <>            <h3> 饼图 </h3>            <Chart height={ 400 } data={ pieData } scale={ cols } autoFit                   interactions={ [ 'element-single-selected' ] }>                <Coordinate type="theta" radius={ 0.75 }/>                {/*<Tooltip showTitle={ false }/>*/ }                <Axis visible={ false }/>                <Interval                    position="percent"                    adjust="stack"                    color="item"                    label={                        [ '*', {                            content: (data) => {                                return `${ data.item }: ${ data.percent * 100 }%`;                            },                        } ] }                />            </Chart>        </>;    }    render() {        console.log(this.props.dataset);        let { xaxis, series, size } = this.props.dataset;        let position = `${ xaxis }*${ series[0][0] }`;        let name = series[0][1];        // let color = 'city';        return <>            {/*{ this.pie() }*/ }            <h2 style={ { textAlign: 'center', padding: '10px 20px' } }>{ name }用户画像</h2>            <Spin spinning={ this.state.loading } tip="loading...">                <Chart height={ size.height } padding="auto" data={ this.state.data } autoFit                       interactions={ [ 'active-region' ] }                >                    <Interval position={ position }/>                    {/*<Line position={ position }/>*/}                    {/*<Point position={ position }/>*/}                    {/*<Tooltip shared/>*/ }                </Chart>            </Spin>        </>;    }}