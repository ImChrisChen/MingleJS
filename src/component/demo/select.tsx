import { IComponentProps } from '@interface/common/component';import React from 'react';import { Checkbox, Select, Typography } from 'antd';import style from './select.scss';const { Text, Link } = Typography;const { Option } = Select;const options = [    {        value   : '1',        label   : 'Zhejiang',        checked : -1,        children: [            {                value   : '2',                label   : 'Hangzhou',                checked : 0,                children: [                    {                        value: '3',                        label: 'West Lake',                    },                ],            },        ],    },    {        value   : '4',        label   : 'Jiangsu',        checked : 1,        children: [            {                value   : '5',                label   : 'Nanjing',                checked : 1,                children: [                    {                        value: '6',                        label: 'Zhong Hua Men',                    },                ],            },        ],    },    {        value   : '7',        label   : 'Jiangsu',        checked : 1,        children: [            {                value   : '8',                label   : 'Nanjing',                checked : 1,                children: [                    {                        value: '9',                        label: 'Zhong Hua Men',                    },                ],            },        ],    },    {        value   : '10',        label   : 'Jiangsu',        checked : 1,        children: [            {                value   : '11',                label   : 'Nanjing',                checked : 1,                children: [                    {                        value: '12',                        label: 'Zhong Hua Men',                    },                ],            },        ],    },];export default class FormSelectTree extends React.Component<IComponentProps, any> {    state = {        options: options,        list   : [ ...options ] as Array<any>,    };    private count = 0;    constructor(props) {        super(props);    }    handleChangeCheckbox(e, option) {    }    // 点击li    handleClickLabel(e, option, count) {        console.log(count);        let children = option.children;        if (!children || children.length === 0) return;    }    renderChildren(options, i) {        return <ul>            { options.map((option, index) => {                return <li className={ style.selectList }                           onClick={ e => this.handleClickLabel(e, option, this.count) }>                    <Checkbox indeterminate={ option.checked === -1 }                              checked={ !!option.checked }                              onChange={ e => this.handleChangeCheckbox(e, option) }                    />                    <Text className={ style.selectLabel }                          type="secondary">{ option.label }</Text>                </li>;            }) }        </ul>;    }    render() {        return <div className={ style.FormSelectTree }>            { this.state.list.map((item, index) => {                return this.renderChildren(item.children, index);            }) }        </div>;    }}