/** * Created by WebStorm. * User: MacBook * Date: 2020/12/8 * Time: 3:29 下午 */import React, { Component } from 'react';import { IComponentProps } from '@interface/common/component';import style from './LayoutList.scss';export default class LayoutList extends Component<IComponentProps, any> {    createElements(count, width, bottom): Array<HTMLElement> {        let elements: Array<HTMLElement> = [];        for (let i = 0; i < count; i++) {            let element = document.createElement('div');            element.style.width = width;            element.style.marginBottom = bottom + 'px';            element.style.visibility = 'hidden';            elements.push(element);        }        return elements;    }    // (row - 1) * (right / 2)    render() {        let { row, space } = this.props.dataset;        let [ right, bottom ] = space;        let { elChildren } = this.props;        let width = row === 1 ? '100%' : `calc(${ 100 / row }% - ${ (right / 2) }px)`;        let diff = row - (elChildren.length % row);        return <div className={ style.layoutList } ref={ node => {            elChildren.forEach((element, index) => {                element.style.width = width;                element.style.marginBottom = bottom + 'px';            });            let elements = this.createElements(diff, width, bottom);            node?.append(...[ ...elChildren, ...elements ]);        } }/>;    }}