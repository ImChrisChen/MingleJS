/** * Created by WebStorm. * User: MacBook * Date: 2021/1/28 * Time: 5:22 下午 */import { sleep } from '@utils/util';export class Monitor {    constructor() {    }    // 获取加载时间性能测速    public static getPerformanceTimes(cb: (times?: Array<any>) => any) {        let times: Array<any> = [];        let that = this;        let time = window.performance.timing;        let loadTime = (time.loadEventEnd - time.loadEventStart) / 1000;        if (loadTime < 0) {            setTimeout(() => {                that.getPerformanceTimes(cb);            }, 200);        } else {            let redirect = { name: '重定向时间', value: time.redirectEnd - time.redirectStart };            let domain = { name: 'DNS解析时间', value: (time.domainLookupEnd - time.domainLookupStart) };            let tcpconnect = { name: 'TCP完成握手时间', value: (time.connectEnd - time.connectStart) };            let response = { name: 'HTTP请求响应完成时间', value: (time.responseEnd - time.requestStart) };            let domload = { name: 'DOM开始加载前所花费时间', value: time.responseEnd - time.navigationStart };            let domend = { name: 'DOM结构解析完成时间', value: time.domInteractive - time.domLoading };            let scriptload = { name: '脚本加载时间', value: time.domContentLoadedEventEnd - time.domContentLoadedEventStart };            let onload = { name: 'onload事件时间', value: time.loadEventEnd - time.loadEventStart };            let pageload = {                name : '页面完全加载时间',                value: redirect.value + domain.value + tcpconnect.value + response.value + domload.value + domend.value,            };            times.push(redirect, domain, tcpconnect, response, domload, domend, scriptload, onload, pageload);            for (let item of times) {                item.unit = '毫秒(ms)';                console.log(item.name + ':' + item.value + item.unit);            }            cb(times);        }    }}