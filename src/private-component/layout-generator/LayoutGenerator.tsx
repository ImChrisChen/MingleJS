/** * Created by WebStorm. * User: MacBook * Date: 2020/11/17 * Time: 3:20 下午 */import React, { Component, memo } from 'react';import { Card } from 'antd';import style from './LayoutGenerator.scss';import { DndProvider } from 'react-dnd';import { HTML5Backend } from 'react-dnd-html5-backend';import { useDrag, useDrop } from 'react-dnd';const ItemTypes = {    BOX: 'box',};export const Box = ({ name }) => {    const style = {        border         : '1px dashed gray',        backgroundColor: 'white',        padding        : '0.5rem 1rem',        marginRight    : '1.5rem',        marginBottom   : '1.5rem',        cursor         : 'move',        float          : 'left',    };    const [ { isDragging }, drag ] = useDrag({        item   : { name, type: ItemTypes.BOX },        end    : (item, monitor) => {            const dropResult = monitor.getDropResult();            if (item && dropResult) {                alert(`You dropped ${ item.name } into ${ dropResult.name }!`);            }        },        collect: (monitor) => ({            isDragging: monitor.isDragging(),        }),    });    const opacity = isDragging ? 0.4 : 1;    // @ts-ignore    return (<div ref={ drag } style={ { ...style, opacity } }>        { name }    </div>);};export const Dustbin = () => {    let style = {        height         : '12rem',        width          : '12rem',        marginRight    : '1.5rem',        marginBottom   : '1.5rem',        color          : 'white',        padding        : '1rem',        textAlign      : 'center',        fontSize       : '1rem',        lineHeight     : 'normal',        float          : 'left',        backgroundColor: '#222',    };    const [ { canDrop, isOver }, drop ] = useDrop({        accept : ItemTypes.BOX,        drop   : () => ({ name: 'Dustbin' }),        collect: (monitor) => ({            isOver : monitor.isOver(),            canDrop: monitor.canDrop(),        }),    });    const isActive = canDrop && isOver;    if (isActive) {        style.backgroundColor = 'darkgreen';    } else if (canDrop) {        style.backgroundColor = 'darkkhaki';    }    // @ts-ignore    return <div ref={ drop } style={ style }>        { isActive ? 'Release to drop' : 'Drag a box here' }    </div>;};export const Example = memo(function Container() {    return (<div>        <div style={ { overflow: 'hidden', clear: 'both' } }>            <Dustbin/>        </div>        <div style={ { overflow: 'hidden', clear: 'both' } }>            <Box name="Glass"/>            <Box name="Banana"/>            <Box name="Paper"/>        </div>    </div>);});// https://strml.github.io/react-grid-layout/examples/1-basic.htmlconst styles = {    display       : 'flex',    alignItems    : 'center',    justifyContent: 'center',    border        : 'solid 1px #ddd',    background    : '#f0f0f0',};export class LayoutGenerator extends Component<any, any> {    constructor(props) {        super(props);    }    render() {        return <>            <DndProvider backend={ HTML5Backend }>                <Example/>            </DndProvider>        </>;    }}