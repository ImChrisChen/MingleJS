/** * Created by WebStorm. * User: MacBook * Date: 2021/2/8 * Time: 3:14 下午 */import { deepEach } from '@root/utils/util';// 数据劫持export class Observe {    constructor(data, watcher) {        deepEach(data, (item, i, superItem) => {            this.defineProperty(item, watcher, superItem);        });        return data;    }    // Object.defineProperty    defineProperty(target, watcher, superItem) {        for (const key in target) {            if (!target.hasOwnProperty(key)) continue;            let value = target[key];            Object.defineProperty(target, key, {                set(newVal) {                    // if (value === newVal) {                    //     return;                    // }                    value = newVal;                    watcher[key] && watcher[key](newVal, target, key, superItem); // 监听回掉                },                get() {                    return value;                },            });        }    }    // new Proxy    defineProxy(target, watcher) {        return new Proxy(target, {            get(target, key, receiver) {                return target[key];            },            set(target, key, value, receiver) {                // if (target[key] === value) {                //     return true                // }                target[key] = value;                watcher[key] && watcher[key](value, target, key);                return true;            },        });    }}