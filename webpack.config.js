const path = require('path');const MiniCssExtractPlugin = require('mini-css-extract-plugin');const webpack = require('webpack');const HtmlWebpackPlugin = require('html-webpack-plugin'); //打包html的插件const typingsForCssModulesLoaderConf = {    loader: 'typings-for-css-modules-loader',    options: {        modules: true,        namedExport: true,        camelCase: true,        sass: true,    },};module.exports = {    mode: 'production',    devtool: 'source-map',    entry: './main.ts',    output: {        path: path.resolve(__dirname, 'dist'),        filename: './mingle.min.js',        // publicPath: '/assets/',        libraryTarget: 'umd',    },    resolve: {        extensions: ['.ts', '.tsx', '.js', '.json'],    },    module: {        rules: [            {                test: /\.css$/,                use: [                    { loader: 'style-loader' },                    { loader: 'css-loader' },                ],            },            {                test: /\.less$/,                use: [                    { loader: 'style-loader' },                    { loader: 'css-loader' },                    { loader: 'less-loader' },                ],            },            {                test: /\.scss$/,                rules: [                    {                        use: [                            'style-loader',                            typingsForCssModulesLoaderConf,                        ],                    },                ],            },            {                test: /\.tsx?$/,                use: {                    // loader: 'ts-loader',                    loader: 'awesome-typescript-loader',                },            },            { enforce: 'pre', test: /\.js$/, loader: 'source-map-loader' },            {                test: /\.jsx?$/,                use: {                    loader: 'babel-loader',                },            },        ],    },    externals: {        // 忽略打包('直接在Html中引入了，减少打包速度')        // 'react': 'React',        // 'react-dom': 'ReactDOM',    },    plugins: [                new MiniCssExtractPlugin({            // Options similar to the same options in webpackOptions.output            // both options are optional            filename: '[name].[contenthash].css',            disable: process.env.NODE_ENV === 'development',            chunkFilename: '[id].css',        }),                new webpack.WatchIgnorePlugin([/css\.d\.ts$/]),                // 处理html        new HtmlWebpackPlugin({            // chunks: ['./dist/mingle.min.js'],            filename: path.join(__dirname, 'dist/index.html'),            template: './public/index.html',        }),    ],    devServer: {        contentBase: path.join(__dirname, './dist/'),   //发布目录        compress: true,             // 是否压缩        host: '0.0.0.0',            // 局域网ip        port: 9700,        historyApiFallback: true,        open: true,     //是否自动打开默认浏览器        hot: true,      //热更新        useLocalIp: true,//是否用自己的IP        inline: true,//    },};